plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.netflix.dgs.codegen' version '6.2.1'
	id 'com.google.protobuf' version '0.9.3'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	set('netflixDgsVersion', "9.1.2")
}

dependencies {
	implementation project(':contract-first')

	implementation 'io.grpc:grpc-netty-shaded:1.53.0'
	implementation 'io.grpc:grpc-protobuf:1.53.0'
	implementation 'io.grpc:grpc-stub:1.53.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.google.protobuf:protobuf-java:3.24.0'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/schema"]
	generateClient = true
}

protobuf {
	protoc { artifact = 'com.google.protobuf:protoc:3.24.0' }
	plugins {
		grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.53.0' }
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}